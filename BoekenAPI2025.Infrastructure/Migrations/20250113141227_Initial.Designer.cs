// <auto-generated />
using BoekenAPI2025.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoekenAPI2025.Infrastructure.Migrations
{
    [DbContext(typeof(Boeken2025Context))]
    [Migration("20250113141227_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("BoekenAPI2025.Infrastructure.Models.Boek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AantalBladzijden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Publicatiejaar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchrijverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SchrijverId");

                    b.ToTable("Boeken");
                });

            modelBuilder.Entity("BoekenAPI2025.Infrastructure.Models.Schrijver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schrijvers");
                });

            modelBuilder.Entity("BoekenAPI2025.Infrastructure.Models.Boek", b =>
                {
                    b.HasOne("BoekenAPI2025.Infrastructure.Models.Schrijver", "Schrijver")
                        .WithMany("Boeken")
                        .HasForeignKey("SchrijverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schrijver");
                });

            modelBuilder.Entity("BoekenAPI2025.Infrastructure.Models.Schrijver", b =>
                {
                    b.Navigation("Boeken");
                });
#pragma warning restore 612, 618
        }
    }
}
